name: build

on:
  workflow_call:
    inputs:
      platforms:
        description: platforms (JSON string)
        type: string
        default: |
          ["linux/amd64", "linux/arm64"]
      suffixes:
        description: image suffixes (multiline string)
        type: string
        default: |
          -linux-amd64
          -linux-arm64

jobs:
  for:
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(inputs.platforms) }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: suffix=-${{ matrix.platform }}
      - uses: int128/docker-build-cache-config-action@v1
        id: cache
        with:
          image: ghcr.io/${{ github.repository }}/cache
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        id: build
        with:
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: ${{ steps.cache.outputs.cache-from }}
          cache-to: ${{ steps.cache.outputs.cache-to }}
          platforms: ${{ matrix.platform }}

  multi-architecture:
    needs:
      - for
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/${{ github.repository }}
      - uses: int128/docker-manifest-create-action@v1
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          suffixes: ${{ inputs.suffixes }}
